cmake_minimum_required(VERSION 3.7)

project("fw")

set(FW_DIR ${CMAKE_SOURCE_DIR}/fw/generated)
set(COMMON_DIR ${CMAKE_SOURCE_DIR}/fw/logic)
set(LIB_DIR ${CMAKE_SOURCE_DIR}/fw/lib)


# All relative to project root, as generated by STM32CubeMX.
set(SOURCE_DIR ${FW_DIR}/Src)
set(CMSIS_DIR ${FW_DIR}/Drivers/CMSIS)
set(DEVICE_DIR ${FW_DIR}/Drivers/CMSIS/Device/ST/STM32F1xx)
set(MDK_DIR ${FW_DIR}/MDK-ARM)
set(HAL_DIR ${FW_DIR}/Drivers/STM32F1xx_HAL_Driver)
set(MW_DIR ${FW_DIR}/Middlewares)

# Look here for header files.
include_directories(${FW_DIR}/Inc)
include_directories(${COMMON_DIR})
include_directories(${CMSIS_DIR}/Include)
include_directories(${DEVICE_DIR}/Include)
include_directories(${HAL_DIR}/Inc)
include_directories(${MW_DIR}/ST/STM32_USB_Device_Library/Class/CDC/Inc)
include_directories(${MW_DIR}/ST/STM32_USB_Device_Library/Core/Inc)
include_directories(${MW_DIR}/Third_Party/FreeRTOS/Source/CMSIS_RTOS)
include_directories(${MW_DIR}/Third_Party/FreeRTOS/Source/include)
include_directories(${MW_DIR}/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM3)
include_directories(${LIB_DIR}/protobuf-c)

# For diagnostic tools like rtags.
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# As of late 2016 we can get the GNU ARM Embedded Toolchain from:
# https://developer.arm.com/open-source/gnu-toolchain/gnu-rm.
#set(CMAKE_C_COMPILER "arm-none-eabi-gcc")

# Some parts (e.g. Cortex-M4) have a FPU, but with F0 parts we're stuck with VFP.
set(CMAKE_C_FLAGS "-DSTM32F105xC")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DSTM32F103x6 -mcpu=cortex-m0 -mthumb")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mno-thumb-interwork -mfpu=vfp -msoft-float")


# The linker flag --gc-section keeps unused object code here from being linked.
add_executable(${PROJ}.elf
        ${MW_DIR}/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c
        ${MW_DIR}/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c
        ${MW_DIR}/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c
        ${MW_DIR}/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM3/port.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/croutine.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/list.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/event_groups.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/queue.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/tasks.c
        ${MW_DIR}/Third_Party/FreeRTOS/Source/timers.c

        ${SOURCE_DIR}/can.c
        ${SOURCE_DIR}/freertos.c
        ${SOURCE_DIR}/gpio.c
        ${SOURCE_DIR}/stm32f1xx_hal_msp.c
        ${SOURCE_DIR}/stm32f1xx_hal_timebase_TIM.c
        ${SOURCE_DIR}/system_stm32f1xx.c
        ${SOURCE_DIR}/usart.c
        ${SOURCE_DIR}/usb_device.c
        ${SOURCE_DIR}/usbd_cdc_if.c
        ${SOURCE_DIR}/usbd_conf.c
        ${SOURCE_DIR}/usbd_desc.c

        ${COMMON_DIR}/custom.c
        ${COMMON_DIR}/messages.pb-c.c

        ${SOURCE_DIR}/main.c
        ${SOURCE_DIR}/stm32f1xx_it.c
        ${MDK_DIR}/startup_stm32f105xc.s
        ${HAL_DIR}/Src/stm32f1xx_hal.c
        ${HAL_DIR}/Src/stm32f1xx_hal_can.c
        ${HAL_DIR}/Src/stm32f1xx_hal_cortex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_dma.c
        ${HAL_DIR}/Src/stm32f1xx_hal_flash.c
        ${HAL_DIR}/Src/stm32f1xx_hal_flash_ex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_gpio.c
        ${HAL_DIR}/Src/stm32f1xx_hal_gpio_ex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_pcd.c
        ${HAL_DIR}/Src/stm32f1xx_hal_pcd_ex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_pwr.c
        ${HAL_DIR}/Src/stm32f1xx_hal_rcc.c
        ${HAL_DIR}/Src/stm32f1xx_hal_rcc_ex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_tim.c
        ${HAL_DIR}/Src/stm32f1xx_hal_tim_ex.c
        ${HAL_DIR}/Src/stm32f1xx_hal_uart.c
        ${HAL_DIR}/Src/stm32f1xx_ll_usb.c
        ${LIB_DIR}/protobuf-c/protobuf-c.c)


